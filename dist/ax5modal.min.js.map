{"version":3,"sources":["ax5modal.min.js","ax5modal.js","ax5modal-tmpl.js"],"names":["MODAL","UI","ax5","ui","U","util","addClass","className","version","ax5modal","self","this","cfg","ENM","mousedown","info","supportTouch","mousemove","mouseup","getMousePosition","e","mouseObj","changedTouches","clientX","clientY","instanceId","getGuid","config","id","position","left","top","margin","minimizePosition","clickEventName","theme","width","height","closeToEsc","disableDrag","animateTime","activeModal","watingModal","$","onStateChanged","opts","that","call","getContent","modalId","data","header","fullScreen","styles","iframe","iframeLoadingMsg","zIndex","absolute","param","tmpl","get","open","callback","jQuery","document","body","append","activeModalConfig","root","find","align","state","css","attr","method","target","action","url","on","hide","bind","show","submit","window","onkeyup","event","btnOnClick","off","isFullScreen","isButton","findParentNode","_target","getAttribute","mousePosition","moveModal","stopEvent","originalEvent","resizeModal","k","srcElement","key","value","btns","dialogId","btnTarget","onClick","keyCode","eventKeys","ESC","close","alignProcessor","top-left","top-right","bottom-left","bottom-right","center-middle","modalZIndex","modalOffset","modalBox","outerWidth","outerHeight","windowBox","scrollLeft","scrollTop","getResizerPosition","__dx","__dy","minX","maxX","minY","maxY","resizer","resizerBg","setModalPosition","box","offset","removeClass","remove","unbind","removeAttr","resizerType","resizerProcessor","shiftKey","altKey","bottom","right","cursorType","cursor","extend","init","tryCount","setTimeout","modalConfig","$iframe","iframeObject","idoc","contentDocument","contentWindow","children","each","innerHTML","CollectGarbage","minimized","minimize","originalHeight","maximize","undefined","setModalConfig","_config","_fullScreen","isFunction","headerHeight","main","modal_instance","push","arguments","isObject","setConfig","apply","modal","content","tmplName","columnKeys","mustache","render"],"mappings":"AAAA,cCCA,WAEA,GAEAA,GAFAC,EAAAC,IAAAC,GACAC,EAAAF,IAAAG,IAGAJ,GAAAK,UACAC,UAAA,QACAC,QAAA,cACA,WA6CA,GAAAC,GAAA,WACA,GAAAC,GAAAC,KACAC,EAAAA,OACAC,GACAC,UAAAZ,IAAAa,KAAAC,aAAA,aAAA,YACAC,UAAAf,IAAAa,KAAAC,aAAA,YAAA,YACAE,QAAAhB,IAAAa,KAAAC,aAAA,WAAA,WAEAG,EAAA,SAAAC,GACA,GAAAC,GAAAD,CAIA,OAHA,kBAAAA,KACAC,EAAAD,EAAAE,eAAA,KAGAC,QAAAF,EAAAE,QACAC,QAAAH,EAAAG,SAIAb,MAAAc,WAAAvB,IAAAwB,UACAf,KAAAgB,QACAC,GAAA,aAAAjB,KAAAc,WACAI,UACAC,KAAA,SACAC,IAAA,SACAC,OAAA,IAEAC,iBAAA,eACAC,eAAA,QACAC,MAAA,UACAC,MAAA,IACAC,OAAA,IACAC,YAAA,EACAC,aAAA,EACAC,YAAA,KAEA7B,KAAA8B,YAAA,KACA9B,KAAA+B,aAAA,EACA/B,KAAAgC,KAEA/B,EAAAD,KAAAgB,MAEA,IAAAiB,GAAA,SAAAC,EAAAC,GAOA,MANAD,IAAAA,EAAAD,eACAC,EAAAD,eAAAG,KAAAD,EAAAA,GAEAnC,KAAAiC,gBACAjC,KAAAiC,eAAAG,KAAAD,EAAAA,IAEA,GAEAE,EAAA,SAAAC,EAAAJ,GACA,GAAAK,IACAD,QAAAA,EACAd,MAAAU,EAAAV,MACAgB,OAAAN,EAAAM,OACAC,WAAAP,EAAAO,WAAA,aAAA,GACAC,OAAA,GACAC,OAAAT,EAAAS,OACAC,iBAAAV,EAAAU,iBAcA,OAXAV,GAAAW,SACAN,EAAAG,QAAA,WAAAR,EAAAW,OAAA,KAEAX,EAAAY,WACAP,EAAAG,QAAA,sBAGAH,EAAAI,QAAA,gBAAAJ,GAAAI,OAAAI,QACAR,EAAAI,OAAAI,MAAAxD,IAAAG,KAAAqD,MAAAR,EAAAI,OAAAI,QAGA1D,EAAA2D,KAAAC,IAAAb,KAAApC,KAAA,UAAAuC,OAEAW,EAAA,SAAAhB,EAAAiB,GACA,GAAAhB,GAAAA,MACAiB,QAAAC,SAAAC,MAAAC,OAAAlB,EAAAD,KAAApC,KAAAkC,EAAAjB,GAAAiB,IAEAlC,KAAA8B,YAAAsB,OAAA,IAAAlB,EAAAjB,IACAjB,KAAAwD,kBAAAtB,EAEAlC,KAAAgC,GACAyB,KAAAzD,KAAA8B,YACAU,OAAAxC,KAAA8B,YAAA4B,KAAA,6BACAJ,KAAAtD,KAAA8B,YAAA4B,KAAA,4BAGAxB,EAAAS,QACA3C,KAAAgC,EAAA,eAAAhC,KAAA8B,YAAA4B,KAAA,kCACA1D,KAAAgC,EAAA,OAAAhC,KAAA8B,YAAA4B,KAAA,6BACA1D,KAAAgC,EAAA,eAAAhC,KAAA8B,YAAA4B,KAAA,kCACA1D,KAAAgC,EAAA,kBAAAhC,KAAA8B,YAAA4B,KAAA,sCAGA1D,KAAAgC,EAAA,cAAAhC,KAAA8B,YAAA4B,KAAA,iCAIA1D,KAAA2D,QAEAxB,GACApC,KAAAC,KACAiB,GAAAiB,EAAAjB,GACAO,MAAAU,EAAAV,MACAC,MAAAS,EAAAT,MACAC,OAAAQ,EAAAR,OACAkC,MAAA,OACA5B,EAAAhC,KAAAgC,GAGAE,EAAAS,SACA3C,KAAAgC,EAAA,eAAA6B,KAAAnC,OAAAQ,EAAAR,SACA1B,KAAAgC,EAAA,OAAA6B,KAAAnC,OAAAQ,EAAAR,SAGA1B,KAAAgC,EAAA,eAAA8B,MAAAC,OAAA7B,EAAAS,OAAAoB,SACA/D,KAAAgC,EAAA,eAAA8B,MAAAE,OAAA9B,EAAAjB,GAAA,WACAjB,KAAAgC,EAAA,eAAA8B,MAAAG,OAAA/B,EAAAS,OAAAuB,MACAlE,KAAAgC,EAAA,OAAAmC,GAAA,OAAA,WACAhC,EAAAyB,MAAA,OACA1B,EAAAU,kBACA5C,KAAAgC,EAAA,kBAAAoC,OAEAnC,EAAAG,KAAApC,KAAAkC,EAAAC,IACAkC,KAAArE,OACAkC,EAAAU,kBACA5C,KAAAgC,EAAA,OAAAsC,OAEAtE,KAAAgC,EAAA,eAAAuC,UAGApB,GAAAA,EAAAf,KAAAD,EAAAA,GAEAnC,KAAA+B,aACAE,EAAAG,KAAApC,KAAAkC,EAAAC,GAIAD,EAAAP,YACAyB,OAAAoB,QAAAH,KAAA,mBAAA,SAAA5D,GACAgE,EAAArC,KAAApC,KAAAS,GAAA+D,OAAAE,QACAL,KAAArE,OAEAoD,OAAAoB,QAAAH,KAAA,kBAAA,SAAA5D,GACAT,KAAA2D,MAAA,KAAAlD,GAAA+D,OAAAE,QACAL,KAAArE,OAEAA,KAAA8B,YACAqC,GAAAlE,EAAAsB,eAAA,0BAAA,SAAAd,GACAkE,EAAAvC,KAAApC,KAAAS,GAAA+D,OAAAE,MAAAxC,IACAmC,KAAArE,OAEAA,KAAAgC,EAAAQ,OACAoC,IAAA1E,EAAA,WACA0E,IAAA,aACAT,GAAAjE,EAAA,UAAA,SAAAO,GACA,GAAAyB,EAAA2C,aAAA,OAAA,CAGA,IAAAC,GAAArF,EAAAsF,eAAAtE,EAAAuD,OAAA,SAAAgB,GACA,GAAAA,EAAAC,aAAA,yBACA,OAAA,GAIAH,IAAA,GAAA5C,EAAAN,cACA7B,EAAAmF,cAAA1E,EAAAC,GACA0E,EAAAhB,GAAA/B,KAAArC,MAGAoE,GAAA,YAAA,SAAA1D,GAEA,MADAhB,GAAA2F,UAAA3E,EAAA4E,gBACA,IAGArF,KAAA8B,YACA8C,IAAA1E,EAAA,WACA0E,IAAA,aACAT,GAAAjE,EAAA,UAAA,0BAAA,SAAAO,GACA,OAAAyB,EAAA2C,eACA9E,EAAAmF,cAAA1E,EAAAC,OACA6E,GAAAnB,GAAA/B,KAAArC,EAAAC,KAAAiF,aAAA,6BAEAd,GAAA,YAAA,SAAA1D,GAEA,MADAhB,GAAA2F,UAAA3E,EAAA4E,gBACA,KAGAV,EAAA,SAAAlE,EAAAyB,EAAAiB,EAAAa,EAAAuB,GACA,GAAApD,GAAAA,MACA1B,GAAA+E,aAAA/E,EAAAuD,OAAAvD,EAAA+E,YAEAxB,EAAAvE,EAAAsF,eAAAtE,EAAAuD,OAAA,SAAAA,GACA,GAAAA,EAAAiB,aAAA,yBACA,OAAA,IAIAjB,IACAuB,EAAAvB,EAAAiB,aAAA,yBAEA9C,GACApC,KAAAC,KACAyF,IAAAF,EAAAG,MAAAxD,EAAAM,OAAAmD,KAAAJ,GACAK,SAAA1D,EAAAjB,GACA4E,UAAA7B,GAGA9B,EAAAM,OAAAmD,KAAAJ,GAAAO,SACA5D,EAAAM,OAAAmD,KAAAJ,GAAAO,QAAA1D,KAAAD,EAAAoD,IAIApD,EAAA,KACAD,EAAA,KACAiB,EAAA,KACAa,EAAA,KACAuB,EAAA,MAEAd,EAAA,SAAAhE,GACAA,EAAAsF,SAAAxG,IAAAa,KAAA4F,UAAAC,KACAjG,KAAAkG,SAGAC,GACAC,WAAA,WACApG,KAAA2D,OAAAxC,KAAA,OAAAC,IAAA,SAEAiF,YAAA,WACArG,KAAA2D,OAAAxC,KAAA,QAAAC,IAAA,SAEAkF,cAAA,WACAtG,KAAA2D,OAAAxC,KAAA,OAAAC,IAAA,YAEAmF,eAAA,WACAvG,KAAA2D,OAAAxC,KAAA,QAAAC,IAAA,YAEAoF,gBAAA,WACAxG,KAAA2D,OAAAxC,KAAA,SAAAC,IAAA,aAGA+D,GACAhB,GAAA,WACA,GAAAsC,GAAAzG,KAAA8B,YAAA+B,IAAA,WACA6C,EAAA1G,KAAA8B,YAAAZ,WACAyF,GACAlF,MAAAzB,KAAA8B,YAAA8E,aAAAlF,OAAA1B,KAAA8B,YAAA+E,eAEAC,GACArF,MAAA2B,OAAAoB,QAAA/C,QACAC,OAAA0B,OAAAoB,QAAA9C,SACAqF,WAAA/G,KAAAwD,kBAAAV,SAAA,EAAAM,OAAAC,UAAA0D,aACAC,UAAAhH,KAAAwD,kBAAAV,SAAA,EAAAM,OAAAC,UAAA2D,aAEAC,EAAA,SAAAxG,GAkBA,MAjBAV,GAAAmH,KAAAzG,EAAAG,QAAAb,EAAAmF,cAAAtE,QACAb,EAAAoH,KAAA1G,EAAAI,QAAAd,EAAAmF,cAAArE,QAEAuG,EAAAV,EAAAvF,KAAApB,EAAAmH,KACAnH,EAAAmH,MAAAR,EAAAvF,KAEAkG,EAAAX,EAAAvF,KAAApB,EAAAmH,OACAnH,EAAAmH,KAAAG,EAAAX,EAAAvF,MAGAmG,EAAAZ,EAAAtF,IAAArB,EAAAoH,KACApH,EAAAoH,MAAAT,EAAAtF,IAEAmG,EAAAb,EAAAtF,IAAArB,EAAAoH,OACApH,EAAAoH,KAAAI,EAAAb,EAAAtF,MAIAD,KAAAuF,EAAAvF,KAAApB,EAAAmH,KAAAJ,EAAAC,WACA3F,IAAAsF,EAAAtF,IAAArB,EAAAoH,KAAAL,EAAAE,YAIAI,EAAA,EAAAC,EAAAP,EAAArF,MAAAkF,EAAAlF,MACA6F,EAAA,EAAAC,EAAAT,EAAApF,OAAAiF,EAAAjF,MAEA3B,GAAAmH,KAAA,EACAnH,EAAAoH,KAAA,EAEApH,EAAAyH,UAEAzH,EAAA0H,UAAArE,OAAA,+EACArD,EAAAyH,QAAApE,OAAA,oEACArD,EAAA0H,UAAA5D,KAAAhB,OAAA4D,IACA1G,EAAAyH,QAAA3D,KACA1C,KAAAuF,EAAAvF,KAAA2F,EAAAC,WACA3F,IAAAsF,EAAAtF,IAAA0F,EAAAE,UACAvF,MAAAkF,EAAAlF,MACAC,OAAAiF,EAAAjF,OACAmB,OAAA4D,EAAA,IAEArD,OAAAC,SAAAC,MACAC,OAAAxD,EAAA0H,WACAlE,OAAAxD,EAAAyH,SACAzH,EAAA+B,YAAAnC,SAAA,WAGAyD,OAAAC,SAAAC,MACAe,KAAAnE,EAAA,UAAA,aAAAD,EAAAgB,GAAA,SAAAR,GACAV,EAAAyH,QAAA3D,IAAAoD,EAAAxG,MAEA4D,KAAAnE,EAAA,QAAA,cAAAF,KAAAc,WAAA,SAAAL,GACA0E,EAAAP,IAAAxC,KAAArC,KAEAsE,KAAA,wBAAArE,KAAAc,WAAA,SAAAL,GACA0E,EAAAP,IAAAxC,KAAArC,KAGAqD,OAAAC,SAAAC,MACAQ,KAAA,eAAA,MACAD,IAAA,cAAA,QACAM,GAAA,eAAA,IAEAS,IAAA,WACA,GAAA8C,GAAA,WACA,GAAAC,GAAA3H,KAAAwH,QAAAI,QACA5H,MAAAwD,kBAAAV,WACA6E,EAAAxG,MAAAiC,OAAAC,UAAA0D,aACAY,EAAAvG,KAAAgC,OAAAC,UAAA2D,aAEAhH,KAAA8B,YAAA+B,IAAA8D,GACAA,EAAA,KAGA3H,MAAAwH,UACAxH,KAAA8B,YAAA+F,YAAA,UACAH,EAAAtF,KAAApC,MAEAA,KAAAwH,QAAAM,SACA9H,KAAAwH,QAAA,KACAxH,KAAAyH,UAAAK,SACA9H,KAAAyH,UAAA,MAIArE,OAAAC,SAAAC,MACAyE,OAAA7H,EAAA,UAAA,aAAAD,EAAAgB,IACA8G,OAAA7H,EAAA,QAAA,aAAAD,EAAAgB,IACA8G,OAAA,uBAAA9H,EAAAgB,IAEAmC,OAAAC,SAAAC,MACA0E,WAAA,gBACAnE,IAAA,cAAA,QACAe,IAAA,iBAIAU,GACAnB,GAAA,SAAA8D,GACA,GAAAxB,GAAAzG,KAAA8B,YAAA+B,IAAA,WACA6C,EAAA1G,KAAA8B,YAAAZ,WACAyF,GACAlF,MAAAzB,KAAA8B,YAAA8E,aAAAlF,OAAA1B,KAAA8B,YAAA+E,eAEAC,GACArF,MAAA2B,OAAAoB,QAAA/C,QACAC,OAAA0B,OAAAoB,QAAA9C,SACAqF,WAAA/G,KAAAwD,kBAAAV,SAAA,EAAAM,OAAAC,UAAA0D,aACAC,UAAAhH,KAAAwD,kBAAAV,SAAA,EAAAM,OAAAC,UAAA2D,aAEAkB,GACA9G,IAAA,SAAAX,GAGA,MAAAA,GAAA0H,UAEAhH,KAAAuF,EAAAvF,KACAC,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MACAC,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAoH,MAGA1G,EAAA2H,QAEAjH,KAAAuF,EAAAvF,KAAApB,EAAAoH,KACA/F,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAoH,KACAzF,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAoH,OAKAhG,KAAAuF,EAAAvF,KACAC,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MACAC,OAAAiF,EAAAjF,OAAA3B,EAAAoH,OAIAkB,OAAA,SAAA5H,GACA,MAAAA,GAAA0H,UAEAhH,KAAAuF,EAAAvF,KACAC,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MACAC,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAoH,MAGA1G,EAAA2H,QAEAjH,KAAAuF,EAAAvF,KAAApB,EAAAoH,KACA/F,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAoH,KACAzF,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAoH,OAKAhG,KAAAuF,EAAAvF,KACAC,IAAAsF,EAAAtF,IACAK,MAAAkF,EAAAlF,MACAC,OAAAiF,EAAAjF,OAAA3B,EAAAoH,OAIAhG,KAAA,SAAAV,GACA,MAAAA,GAAA0H,UAEAhH,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IACAK,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,QAGAjB,EAAA2H,QAEAjH,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IAAArB,EAAAmH,KACAzF,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAmH,OAKA/F,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IACAK,MAAAkF,EAAAlF,MAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,SAIA4G,MAAA,SAAA7H,GACA,MAAAA,GAAA0H,UAEAhH,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IACAK,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,QAGAjB,EAAA2H,QAEAjH,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IAAArB,EAAAmH,KACAzF,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAmH,OAKA/F,KAAAuF,EAAAvF,KACAC,IAAAsF,EAAAtF,IACAK,MAAAkF,EAAAlF,MAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,SAIA0E,WAAA,SAAA3F,GACA,MAAAA,GAAA0H,UAAA1H,EAAA2H,QAEAjH,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAoH,OAKAhG,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA3B,EAAAoH,OAIAd,YAAA,SAAA5F,GACA,MAAAA,GAAA0H,UAAA1H,EAAA2H,QAEAjH,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAoH,OAKAhG,KAAAuF,EAAAvF,KACAC,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA3B,EAAAoH,OAIAb,cAAA,SAAA7F,GACA,MAAAA,GAAA0H,UAAA1H,EAAA2H,QAEAjH,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAoH,OAKAhG,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IACAK,MAAAkF,EAAAlF,MAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA3B,EAAAoH,OAIAZ,eAAA,SAAA9F,GACA,MAAAA,GAAA0H,UAAA1H,EAAA2H,QAEAjH,KAAAuF,EAAAvF,KAAApB,EAAAmH,KACA9F,IAAAsF,EAAAtF,IAAArB,EAAAoH,KACA1F,MAAAkF,EAAAlF,MAAA,EAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA,EAAA3B,EAAAoH,OAKAhG,KAAAuF,EAAAvF,KACAC,IAAAsF,EAAAtF,IACAK,MAAAkF,EAAAlF,MAAA1B,EAAAmH,KACAxF,OAAAiF,EAAAjF,OAAA3B,EAAAoH,QAKAF,EAAA,SAAAxG,GAiBA,MAhBAV,GAAAmH,KAAAzG,EAAAG,QAAAb,EAAAmF,cAAAtE,QACAwG,EAAAV,EAAAvF,KAAApB,EAAAmH,KACAnH,EAAAmH,MAAAR,EAAAvF,KAEAkG,EAAAV,EAAAlF,MAAA1B,EAAAmH,OACAnH,EAAAmH,KAAAP,EAAAlF,MAAA4F,GAGAtH,EAAAoH,KAAA1G,EAAAI,QAAAd,EAAAmF,cAAArE,QACAyG,EAAAZ,EAAAtF,IAAArB,EAAAoH,KACApH,EAAAoH,MAAAT,EAAAtF,IAEAmG,EAAAZ,EAAAjF,OAAA3B,EAAAoH,OACApH,EAAAoH,KAAAR,EAAAjF,OAAA6F,GAGAW,EAAAD,GAAAxH,GAGAT,MAAAwD,kBAAAV,WACA4D,EAAAvF,MAAA2F,EAAAC,WACAL,EAAAtF,KAAA0F,EAAAE,UAGA,IAAAI,GAAA,EAAAC,EAAA,IACAC,EAAA,EAAAC,EAAA,IAEAgB,GACAnH,IAAA,aACAiH,OAAA,aACAlH,KAAA,aACAmH,MAAA,aACAlC,WAAA,cACAC,YAAA,cACAC,cAAA,cACAC,eAAA,cAGAxG,GAAAmH,KAAA,EACAnH,EAAAoH,KAAA,EAEApH,EAAAyH,UAEAzH,EAAA0H,UAAArE,OAAA,+EACArD,EAAAyH,QAAApE,OAAA,oEACArD,EAAA0H,UAAA5D,KACAhB,OAAA4D,EACA+B,OAAAD,EAAAN,KAEAlI,EAAAyH,QAAA3D,KACA1C,KAAAuF,EAAAvF,KACAC,IAAAsF,EAAAtF,IACAK,MAAAkF,EAAAlF,MACAC,OAAAiF,EAAAjF,OACAmB,OAAA4D,EAAA,EACA+B,OAAAD,EAAAN,KAEA7E,OAAAC,SAAAC,MACAC,OAAAxD,EAAA0H,WACAlE,OAAAxD,EAAAyH,SACAzH,EAAA+B,YAAAnC,SAAA,WAGAyD,OAAAC,SAAAC,MACAe,KAAAnE,EAAA,UAAA,aAAAD,EAAAgB,GAAA,SAAAR,GACAV,EAAAyH,QAAA3D,IAAAoD,EAAAxG,MAEA4D,KAAAnE,EAAA,QAAA,cAAAF,KAAAc,WAAA,SAAAL,GACA6E,EAAAV,IAAAxC,KAAArC,KAEAsE,KAAA,wBAAArE,KAAAc,WAAA,SAAAL,GACA6E,EAAAV,IAAAxC,KAAArC,KAGAqD,OAAAC,SAAAC,MACAQ,KAAA,eAAA,MACAD,IAAA,cAAA,QACAM,GAAA,eAAA,IAEAS,IAAA,WACA,GAAA8C,GAAA,WACA,GAAAC,GAAA3H,KAAAwH,QAAAI,QACAxE,QAAAqF,OAAAd,GACAlG,MAAAzB,KAAAwH,QAAA/F,QACAC,OAAA1B,KAAAwH,QAAA9F,WAEA1B,KAAAwD,kBAAAV,WACA6E,EAAAxG,MAAAiC,OAAAC,UAAA0D,aACAY,EAAAvG,KAAAgC,OAAAC,UAAA2D,aAEAhH,KAAA8B,YAAA+B,IAAA8D,GACAA,EAAA,KAGA3H,MAAAwH,UACAxH,KAAA8B,YAAA+F,YAAA,UACAH,EAAAtF,KAAApC,MAEAA,KAAAwH,QAAAM,SACA9H,KAAAwH,QAAA,KACAxH,KAAAyH,UAAAK,SACA9H,KAAAyH,UAAA,MAIArE,OAAAC,SAAAC,MACAyE,OAAA7H,EAAA,UAAA,aAAAD,EAAAgB,IACA8G,OAAA7H,EAAA,QAAA,aAAAD,EAAAgB,IACA8G,OAAA,uBAAA9H,EAAAgB,IAEAmC,OAAAC,SAAAC,MACA0E,WAAA,gBACAnE,IAAA,cAAA,QACAe,IAAA,gBAmBA5E,MAAA0I,KAAA,WACA1I,KAAAiC,eAAAhC,EAAAgC,gBAYAjC,KAAAkD,KAAA,SAAAhB,EAAAiB,EAAAwF,GAcA,MAbA,mBAAAA,KAAAA,EAAA,GACA3I,KAAA8B,YAKA6G,EAAA,IAEA3I,KAAA+B,aAAA,EACA6G,WAAA,WACA5I,KAAAkD,KAAAhB,EAAAiB,EAAAwF,EAAA,IACAtE,KAAArE,MAAAC,EAAA4B,eATAK,EAAAnC,EAAA8I,YAAAzF,OAAAqF,QAAA,KAAAxI,EAAAiC,GACAgB,EAAAd,KAAApC,KAAAkC,EAAAiB,GACAnD,KAAA+B,aAAA,GASA/B,MAYAA,KAAAkG,MAAA,SAAAhE,GAiDA,MAhDAlC,MAAA8B,cACAI,EAAAnC,EAAA8I,YACA7I,KAAA8B,YAAAnC,SAAA,WACAyD,OAAAoB,QAAAuD,OAAA,oBACA3E,OAAAoB,QAAAuD,OAAA,mBAEAa,WAAA,WACA,GAAA5I,KAAA8B,YAAA,CAGA,GAAAI,EAAAS,OAAA,CACA,GAAAmG,GAAA9I,KAAAgC,EAAA,MACA,IAAA8G,EAAA,CACA,GAAAC,GAAAD,EAAA7F,IAAA,GACA+F,EAAAD,EAAAE,gBAAAF,EAAAE,gBAAAF,EAAAG,cAAA7F,QAEA,KACArB,EAAAgH,EAAA1F,MAAA6F,WAAAC,KAAA,WACApH,EAAAhC,MAAA8H,WAEA,MAAArH,IAGAuI,EAAAK,UAAA,GACAP,EACAhF,KAAA,MAAA,eACAgE,SAGAtD,OAAA8E,gBAAA9E,OAAA8E,kBAIAtJ,KAAA8B,YAAAgG,SACA9H,KAAA8B,YAAA,KAGA9B,KAAA+B,aACAE,EAAAG,KAAApC,KAAAkC,GACAnC,KAAAC,KACA4D,MAAA,WAGAS,KAAArE,MAAAC,EAAA4B,cAGA7B,KAAAuJ,WAAA,EAEAvJ,MAOAA,KAAAwJ,SAAA,WAEA,MAAA,UAAAlI,GAEA,GAAAtB,KAAAuJ,aAAA,EAAA,CAEA,GAAArH,GAAAnC,EAAA8I,WACA,oBAAAvH,KAAAA,EAAArB,EAAAqB,kBAEAtB,KAAAuJ,WAAA,EACAvJ,KAAAgC,EAAAsB,KAAAc,OACArE,EAAA8I,YAAAY,eAAAvH,EAAAR,OACA3B,EAAA8I,YAAAnH,OAAA,EACAyE,EAAA7E,GAAAc,KAAApC,MAEAiC,EAAAG,KAAApC,KAAAkC,GACAnC,KAAAC,KACA4D,MAAA,aAIA,MAAA5D,UAQAA,KAAA0J,SAAA,WACA,GAAAxH,GAAAnC,EAAA8I,WAaA,OAZA7I,MAAAuJ,YACAvJ,KAAAuJ,WAAA,EACAvJ,KAAAgC,EAAAsB,KAAAgB,OACAvE,EAAA8I,YAAAnH,OAAA3B,EAAA8I,YAAAY,eACA1J,EAAA8I,YAAAY,eAAAE,OAEA3J,KAAA2D,OAAAxC,KAAA,SAAAC,IAAA,WACAa,EAAAG,KAAApC,KAAAkC,GACAnC,KAAAC,KACA4D,MAAA,aAGA5D,MASAA,KAAA6D,IAAA,SAAAA,GAcA,MAbA7D,MAAA8B,cAAA/B,EAAA0C,aACAzC,KAAA8B,YAAA+B,IAAAA,GACAA,EAAApC,QACA1B,EAAA8I,YAAApH,MAAAzB,KAAA8B,YAAAL,SAEAoC,EAAAnC,SACA3B,EAAA8I,YAAAnH,OAAA1B,KAAA8B,YAAAJ,SACA1B,KAAAgC,EAAA,SACAhC,KAAAgC,EAAA,eAAA6B,KAAAnC,OAAA3B,EAAA8I,YAAAnH,SACA1B,KAAAgC,EAAA,OAAA6B,KAAAnC,OAAA3B,EAAA8I,YAAAnH,YAIA1B,MAQAA,KAAA4J,eAAA,SAAAC,GAGA,MAFA9J,GAAA8I,YAAAzF,OAAAqF,UAAA1I,EAAA8I,YAAAgB,GACA7J,KAAA2D,QACA3D,MASAA,KAAA2D,MAAA,WAEA,MAAA,UAAAzC,EAAAT,GACA,IAAAT,KAAA8B,YAAA,MAAA9B,KAEA,IAAAkC,GAAAnC,EAAA8I,YACAlB,GACAlG,MAAAS,EAAAT,MACAC,OAAAQ,EAAAR,QAGAe,EAAAP,EAAA2C,aAAA,SAAAiF,GACA,MAAA,mBAAAA,KAEArK,EAAAsK,WAAAD,GACAA,IADA,SAGA5H,EAAAO,WA2DA,OAzDAA,IACAP,EAAAM,QAAAxC,KAAAgC,EAAAQ,OAAA8B,OACAqD,EAAAlG,MAAA2B,OAAAoB,QAAA/C,QACAkG,EAAAjG,OAAAQ,EAAAR,OACAiG,EAAAxG,KAAA,EACAwG,EAAAvG,IAAA,IAGAc,EAAAM,QAAAxC,KAAAgC,EAAAQ,OAAA8B,OACApD,GACAkC,OAAAqF,QAAA,EAAAvG,EAAAhB,SAAAA,GAGAgB,EAAAM,QACAN,EAAA8H,aAAAhK,KAAAgC,EAAAQ,OAAAqE,cACAc,EAAAjG,QAAAQ,EAAA8H,cAEA9H,EAAA8H,aAAA,EAIA,QAAA9H,EAAAhB,SAAAC,KACAwG,EAAAxG,KAAAe,EAAAhB,SAAAG,QAAA,EAEA,SAAAa,EAAAhB,SAAAC,KAEAwG,EAAAxG,KAAAiC,OAAAoB,QAAA/C,QAAAkG,EAAAlG,OAAAS,EAAAhB,SAAAG,QAAA,GAEA,UAAAa,EAAAhB,SAAAC,KACAwG,EAAAxG,KAAAiC,OAAAoB,QAAA/C,QAAA,EAAAkG,EAAAlG,MAAA,EAGAkG,EAAAxG,KAAAe,EAAAhB,SAAAC,MAAA,EAGA,OAAAe,EAAAhB,SAAAE,IACAuG,EAAAvG,IAAAc,EAAAhB,SAAAG,QAAA,EAEA,UAAAa,EAAAhB,SAAAE,IACAuG,EAAAvG,IAAAgC,OAAAoB,QAAA9C,SAAAiG,EAAAjG,QAAAQ,EAAAhB,SAAAG,QAAA,GAEA,UAAAa,EAAAhB,SAAAE,IACAuG,EAAAvG,IAAAgC,OAAAoB,QAAA9C,SAAA,EAAAiG,EAAAjG,OAAA,EAGAiG,EAAAvG,IAAAc,EAAAhB,SAAAE,KAAA,EAEAuG,EAAAxG,KAAA,IAAAwG,EAAAxG,KAAA,GACAwG,EAAAvG,IAAA,IAAAuG,EAAAvG,IAAA,IAGApB,KAAA8B,YAAA+B,IAAA8D,GAEAzF,EAAAS,SACA3C,KAAAgC,EAAA,eAAA6B,KAAAnC,OAAAiG,EAAAjG,OAAAQ,EAAA8H,eACAhK,KAAAgC,EAAA,OAAA6B,KAAAnC,OAAAiG,EAAAjG,OAAAQ,EAAA8H,gBAEAhK,SAKAA,KAAAiK,KAAA,WAEA3K,EAAA4K,eAAA5K,EAAA4K,mBACA5K,EAAA4K,eAAAC,KAAAnK,MAEAoK,WAAA3K,EAAA4K,SAAAD,UAAA,KACApK,KAAAsK,UAAAF,UAAA,KAGAG,MAAAvK,KAAAoK,WAEA,OAAAtK,OAGAT,EAAAE,IAAAC,GAAAgL,SCj/BA,WACA,GAAAnL,GAAAE,IAAAC,GAAAgL,MAEAC,EAAA,WACA,MAAA,uvEA6CApL,GAAA2D,MACAyH,QAAAA,EAEAxH,IAAA,SAAAyH,EAAAnI,EAAAoI,GACA,MAAApL,KAAAqL,SAAAC,OAAAxL,EAAA2D,KAAA0H,GAAAtI,KAAApC,KAAA2K,GAAApI","file":"ax5modal.min.js","sourcesContent":["\"use strict\";\n\n// ax5.ui.modal\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MODAL;\n\n    UI.addClass({\n        className: \"modal\",\n        version: \"${VERSION}\"\n    }, function () {\n        /**\n         * @class ax5modal\n         * @alias ax5.ui.modal\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var modal = new ax5.ui.modal({\n         *     iframeLoadingMsg: '<i class=\"fa fa-spinner fa-5x fa-spin\" aria-hidden=\"true\"></i>',\n         *     header: {\n         *         title: \"MODAL TITLE\",\n         *         btns: {\n         *             minimize: {\n         *                 label: '<i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.minimize();\n         *                 }\n         *             },\n         *             maximize: {\n         *                 label: '<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.maximize();\n         *                 }\n         *             },\n         *             close: {\n         *                 label: '<i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.close();\n         *                 }\n         *             }\n         *         }\n         *     }\n         * });\n         *\n         * modal.open({\n         *     width: 800,\n         *     height: 600,\n         *     fullScreen: function(){\n         *         return ($(window).width() < 600);\n         *     },\n         *     iframe: {\n         *         method: \"get\",\n         *         url: \"http://chequer-app:2017/html/login.html\",\n         *         param: \"callback=modalCallback\"\n         *     }\n         * });\n         * ```\n         */\n        var ax5modal = function ax5modal() {\n            var self = this,\n                cfg = void 0,\n                ENM = {\n                \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n                \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n                \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n            },\n                getMousePosition = function getMousePosition(e) {\n                var mouseObj = e;\n                if ('changedTouches' in e) {\n                    mouseObj = e.changedTouches[0];\n                }\n                return {\n                    clientX: mouseObj.clientX,\n                    clientY: mouseObj.clientY\n                };\n            };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-modal-' + this.instanceId,\n                position: {\n                    left: \"center\",\n                    top: \"middle\",\n                    margin: 10\n                },\n                minimizePosition: \"bottom-right\",\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                height: 400,\n                closeToEsc: true,\n                disableDrag: false,\n                animateTime: 250\n            };\n            this.activeModal = null;\n            this.watingModal = false;\n            this.$ = {}; // UI inside of the jQuery object store\n\n            cfg = this.config; // extended config copy cfg\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            },\n                getContent = function getContent(modalId, opts) {\n                var data = {\n                    modalId: modalId,\n                    theme: opts.theme,\n                    header: opts.header,\n                    fullScreen: opts.fullScreen ? \"fullscreen\" : \"\",\n                    styles: \"\",\n                    iframe: opts.iframe,\n                    iframeLoadingMsg: opts.iframeLoadingMsg\n                };\n\n                if (opts.zIndex) {\n                    data.styles += \"z-index:\" + opts.zIndex + \";\";\n                }\n                if (opts.absolute) {\n                    data.styles += \"position:absolute;\";\n                }\n\n                if (data.iframe && typeof data.iframe.param === \"string\") {\n                    data.iframe.param = ax5.util.param(data.iframe.param);\n                }\n\n                return MODAL.tmpl.get.call(this, \"content\", data, {});\n            },\n                open = function open(opts, callback) {\n                var that = void 0;\n                jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                this.activeModal = jQuery('#' + opts.id);\n                this.activeModalConfig = opts;\n                // 파트수집\n                this.$ = {\n                    \"root\": this.activeModal,\n                    \"header\": this.activeModal.find('[data-modal-els=\"header\"]'),\n                    \"body\": this.activeModal.find('[data-modal-els=\"body\"]')\n                };\n\n                if (opts.iframe) {\n                    this.$[\"iframe-wrap\"] = this.activeModal.find('[data-modal-els=\"iframe-wrap\"]');\n                    this.$[\"iframe\"] = this.activeModal.find('[data-modal-els=\"iframe\"]');\n                    this.$[\"iframe-form\"] = this.activeModal.find('[data-modal-els=\"iframe-form\"]');\n                    this.$[\"iframe-loading\"] = this.activeModal.find('[data-modal-els=\"iframe-loading\"]');\n                } else {\n                    this.$[\"body-frame\"] = this.activeModal.find('[data-modal-els=\"body-frame\"]');\n                }\n\n                //- position 정렬\n                this.align();\n\n                that = {\n                    self: this,\n                    id: opts.id,\n                    theme: opts.theme,\n                    width: opts.width,\n                    height: opts.height,\n                    state: \"open\",\n                    $: this.$\n                };\n\n                if (opts.iframe) {\n                    this.$[\"iframe-wrap\"].css({ height: opts.height });\n                    this.$[\"iframe\"].css({ height: opts.height });\n\n                    // iframe content load\n                    this.$[\"iframe-form\"].attr({ \"method\": opts.iframe.method });\n                    this.$[\"iframe-form\"].attr({ \"target\": opts.id + \"-frame\" });\n                    this.$[\"iframe-form\"].attr({ \"action\": opts.iframe.url });\n                    this.$[\"iframe\"].on(\"load\", function () {\n                        that.state = \"load\";\n                        if (opts.iframeLoadingMsg) {\n                            this.$[\"iframe-loading\"].hide();\n                        }\n                        onStateChanged.call(this, opts, that);\n                    }.bind(this));\n                    if (!opts.iframeLoadingMsg) {\n                        this.$[\"iframe\"].show();\n                    }\n                    this.$[\"iframe-form\"].submit();\n                }\n\n                if (callback) callback.call(that, that);\n\n                if (!this.watingModal) {\n                    onStateChanged.call(this, opts, that);\n                }\n\n                // bind key event\n                if (opts.closeToEsc) {\n                    jQuery(window).bind(\"keydown.ax-modal\", function (e) {\n                        onkeyup.call(this, e || window.event);\n                    }.bind(this));\n                }\n                jQuery(window).bind(\"resize.ax-modal\", function (e) {\n                    this.align(null, e || window.event);\n                }.bind(this));\n\n                this.activeModal.on(cfg.clickEventName, \"[data-modal-header-btn]\", function (e) {\n                    btnOnClick.call(this, e || window.event, opts);\n                }.bind(this));\n\n                this.$.header.off(ENM[\"mousedown\"]).off(\"dragstart\").on(ENM[\"mousedown\"], function (e) {\n                    if (opts.isFullScreen) return false;\n\n                    /// 이벤트 필터링 추가 : 버튼엘리먼트로 부터 발생된 이벤트이면 moveModal 시작하지 않도록 필터링\n                    var isButton = U.findParentNode(e.target, function (_target) {\n                        if (_target.getAttribute(\"data-modal-header-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (!isButton && opts.disableDrag != true) {\n                        self.mousePosition = getMousePosition(e);\n                        moveModal.on.call(self);\n                    }\n                }).on(\"dragstart\", function (e) {\n                    U.stopEvent(e.originalEvent);\n                    return false;\n                });\n\n                this.activeModal.off(ENM[\"mousedown\"]).off(\"dragstart\").on(ENM[\"mousedown\"], \"[data-ax5modal-resizer]\", function (e) {\n                    if (opts.isFullScreen) return false;\n                    self.mousePosition = getMousePosition(e);\n                    resizeModal.on.call(self, this.getAttribute(\"data-ax5modal-resizer\"));\n                }).on(\"dragstart\", function (e) {\n                    U.stopEvent(e.originalEvent);\n                    return false;\n                });\n            },\n                btnOnClick = function btnOnClick(e, opts, callback, target, k) {\n                var that = void 0;\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-modal-header-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    k = target.getAttribute(\"data-modal-header-btn\");\n\n                    that = {\n                        self: this,\n                        key: k, value: opts.header.btns[k],\n                        dialogId: opts.id,\n                        btnTarget: target\n                    };\n\n                    if (opts.header.btns[k].onClick) {\n                        opts.header.btns[k].onClick.call(that, k);\n                    }\n                }\n\n                that = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            },\n                onkeyup = function onkeyup(e) {\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n            },\n                alignProcessor = {\n                \"top-left\": function topLeft() {\n                    this.align({ left: \"left\", top: \"top\" });\n                },\n                \"top-right\": function topRight() {\n                    this.align({ left: \"right\", top: \"top\" });\n                },\n                \"bottom-left\": function bottomLeft() {\n                    this.align({ left: \"left\", top: \"bottom\" });\n                },\n                \"bottom-right\": function bottomRight() {\n                    this.align({ left: \"right\", top: \"bottom\" });\n                },\n                \"center-middle\": function centerMiddle() {\n                    this.align({ left: \"center\", top: \"middle\" });\n                }\n            },\n                moveModal = {\n                \"on\": function on() {\n                    var modalZIndex = this.activeModal.css(\"z-index\"),\n                        modalOffset = this.activeModal.position(),\n                        modalBox = {\n                        width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                    },\n                        windowBox = {\n                        width: jQuery(window).width(),\n                        height: jQuery(window).height(),\n                        scrollLeft: this.activeModalConfig.absolute ? 0 : jQuery(document).scrollLeft(),\n                        scrollTop: this.activeModalConfig.absolute ? 0 : jQuery(document).scrollTop()\n                    },\n                        getResizerPosition = function getResizerPosition(e) {\n                        self.__dx = e.clientX - self.mousePosition.clientX;\n                        self.__dy = e.clientY - self.mousePosition.clientY;\n\n                        if (minX > modalOffset.left + self.__dx) {\n                            self.__dx = -modalOffset.left;\n                        } else if (maxX < modalOffset.left + self.__dx) {\n                            self.__dx = maxX - modalOffset.left;\n                        }\n\n                        if (minY > modalOffset.top + self.__dy) {\n                            self.__dy = -modalOffset.top;\n                        } else if (maxY < modalOffset.top + self.__dy) {\n                            self.__dy = maxY - modalOffset.top;\n                        }\n\n                        return {\n                            left: modalOffset.left + self.__dx + windowBox.scrollLeft,\n                            top: modalOffset.top + self.__dy + windowBox.scrollTop\n                        };\n                    };\n\n                    var minX = 0,\n                        maxX = windowBox.width - modalBox.width,\n                        minY = 0,\n                        maxY = windowBox.height - modalBox.height;\n\n                    self.__dx = 0; // 변화량 X\n                    self.__dy = 0; // 변화량 Y\n\n                    if (!self.resizer) {\n                        // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                        self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                        self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                        self.resizerBg.css({ zIndex: modalZIndex });\n                        self.resizer.css({\n                            left: modalOffset.left + windowBox.scrollLeft,\n                            top: modalOffset.top + windowBox.scrollTop,\n                            width: modalBox.width,\n                            height: modalBox.height,\n                            zIndex: modalZIndex + 1\n                        });\n                        jQuery(document.body).append(self.resizerBg).append(self.resizer);\n                        self.activeModal.addClass(\"draged\");\n                    }\n\n                    jQuery(document.body).bind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id, function (e) {\n                        self.resizer.css(getResizerPosition(e));\n                    }).bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                        moveModal.off.call(self);\n                    }).bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                        moveModal.off.call(self);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off() {\n                    var setModalPosition = function setModalPosition() {\n                        var box = this.resizer.offset();\n                        if (!this.activeModalConfig.absolute) {\n                            box.left -= jQuery(document).scrollLeft();\n                            box.top -= jQuery(document).scrollTop();\n                        }\n                        this.activeModal.css(box);\n                        box = null;\n                    };\n\n                    if (this.resizer) {\n                        this.activeModal.removeClass(\"draged\");\n                        setModalPosition.call(this);\n\n                        this.resizer.remove();\n                        this.resizer = null;\n                        this.resizerBg.remove();\n                        this.resizerBg = null;\n                        //this.align();\n                    }\n\n                    jQuery(document.body).unbind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id).unbind(ENM[\"mouseup\"] + \".ax5modal-\" + cfg.id).unbind(\"mouseleave.ax5modal-\" + cfg.id);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            },\n                resizeModal = {\n                \"on\": function on(resizerType) {\n                    var modalZIndex = this.activeModal.css(\"z-index\"),\n                        modalOffset = this.activeModal.position(),\n                        modalBox = {\n                        width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                    },\n                        windowBox = {\n                        width: jQuery(window).width(),\n                        height: jQuery(window).height(),\n                        scrollLeft: this.activeModalConfig.absolute ? 0 : jQuery(document).scrollLeft(),\n                        scrollTop: this.activeModalConfig.absolute ? 0 : jQuery(document).scrollTop()\n                    },\n                        resizerProcessor = {\n                        \"top\": function top(e) {\n\n                            if (e.shiftKey) {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width,\n                                    height: modalBox.height - self.__dy * 2\n                                };\n                            } else if (e.altKey) {\n                                return {\n                                    left: modalOffset.left + self.__dy,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width - self.__dy * 2,\n                                    height: modalBox.height - self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width,\n                                    height: modalBox.height - self.__dy\n                                };\n                            }\n                        },\n                        \"bottom\": function bottom(e) {\n                            if (e.shiftKey) {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top - self.__dy,\n                                    width: modalBox.width,\n                                    height: modalBox.height + self.__dy * 2\n                                };\n                            } else if (e.altKey) {\n                                return {\n                                    left: modalOffset.left - self.__dy,\n                                    top: modalOffset.top - self.__dy,\n                                    width: modalBox.width + self.__dy * 2,\n                                    height: modalBox.height + self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top,\n                                    width: modalBox.width,\n                                    height: modalBox.height + self.__dy\n                                };\n                            }\n                        },\n                        \"left\": function left(e) {\n                            if (e.shiftKey) {\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top,\n                                    width: modalBox.width - self.__dx * 2,\n                                    height: modalBox.height\n                                };\n                            } else if (e.altKey) {\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top + self.__dx,\n                                    width: modalBox.width - self.__dx * 2,\n                                    height: modalBox.height - self.__dx * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top,\n                                    width: modalBox.width - self.__dx,\n                                    height: modalBox.height\n                                };\n                            }\n                        },\n                        \"right\": function right(e) {\n                            if (e.shiftKey) {\n                                return {\n                                    left: modalOffset.left - self.__dx,\n                                    top: modalOffset.top,\n                                    width: modalBox.width + self.__dx * 2,\n                                    height: modalBox.height\n                                };\n                            } else if (e.altKey) {\n                                return {\n                                    left: modalOffset.left - self.__dx,\n                                    top: modalOffset.top - self.__dx,\n                                    width: modalBox.width + self.__dx * 2,\n                                    height: modalBox.height + self.__dx * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top,\n                                    width: modalBox.width + self.__dx,\n                                    height: modalBox.height\n                                };\n                            }\n                        },\n                        \"top-left\": function topLeft(e) {\n                            if (e.shiftKey || e.altKey) {\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width - self.__dx * 2,\n                                    height: modalBox.height - self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width - self.__dx,\n                                    height: modalBox.height - self.__dy\n                                };\n                            }\n                        },\n                        \"top-right\": function topRight(e) {\n                            if (e.shiftKey || e.altKey) {\n                                return {\n                                    left: modalOffset.left - self.__dx,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width + self.__dx * 2,\n                                    height: modalBox.height - self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width + self.__dx,\n                                    height: modalBox.height - self.__dy\n                                };\n                            }\n                        },\n                        \"bottom-left\": function bottomLeft(e) {\n                            if (e.shiftKey || e.altKey) {\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top - self.__dy,\n                                    width: modalBox.width - self.__dx * 2,\n                                    height: modalBox.height + self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top,\n                                    width: modalBox.width - self.__dx,\n                                    height: modalBox.height + self.__dy\n                                };\n                            }\n                        },\n                        \"bottom-right\": function bottomRight(e) {\n                            if (e.shiftKey || e.altKey) {\n                                return {\n                                    left: modalOffset.left - self.__dx,\n                                    top: modalOffset.top - self.__dy,\n                                    width: modalBox.width + self.__dx * 2,\n                                    height: modalBox.height + self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top,\n                                    width: modalBox.width + self.__dx,\n                                    height: modalBox.height + self.__dy\n                                };\n                            }\n                        }\n                    },\n                        getResizerPosition = function getResizerPosition(e) {\n                        self.__dx = e.clientX - self.mousePosition.clientX;\n                        if (minX > modalOffset.left + self.__dx) {\n                            self.__dx = -modalOffset.left;\n                        } else if (maxX > modalBox.width - self.__dx) {\n                            self.__dx = modalBox.width - maxX;\n                        }\n\n                        self.__dy = e.clientY - self.mousePosition.clientY;\n                        if (minY > modalOffset.top + self.__dy) {\n                            self.__dy = -modalOffset.top;\n                        } else if (maxY > modalBox.height - self.__dy) {\n                            self.__dy = modalBox.height - maxY;\n                        }\n\n                        return resizerProcessor[resizerType](e);\n                    };\n\n                    if (!this.activeModalConfig.absolute) {\n                        modalOffset.left += windowBox.scrollLeft;\n                        modalOffset.top += windowBox.scrollTop;\n                    }\n\n                    var minX = 0,\n                        maxX = 100,\n                        minY = 0,\n                        maxY = 100;\n\n                    var cursorType = {\n                        \"top\": \"row-resize\",\n                        \"bottom\": \"row-resize\",\n                        \"left\": \"col-resize\",\n                        \"right\": \"col-resize\",\n                        \"top-left\": \"nwse-resize\",\n                        \"top-right\": \"nesw-resize\",\n                        \"bottom-left\": \"nesw-resize\",\n                        \"bottom-right\": \"nwse-resize\"\n                    };\n\n                    self.__dx = 0; // 변화량 X\n                    self.__dy = 0; // 변화량 Y\n\n                    if (!self.resizer) {\n                        // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                        self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                        self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                        self.resizerBg.css({\n                            zIndex: modalZIndex,\n                            cursor: cursorType[resizerType]\n                        });\n                        self.resizer.css({\n                            left: modalOffset.left,\n                            top: modalOffset.top,\n                            width: modalBox.width,\n                            height: modalBox.height,\n                            zIndex: modalZIndex + 1,\n                            cursor: cursorType[resizerType]\n                        });\n                        jQuery(document.body).append(self.resizerBg).append(self.resizer);\n                        self.activeModal.addClass(\"draged\");\n                    }\n\n                    jQuery(document.body).bind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id, function (e) {\n                        self.resizer.css(getResizerPosition(e));\n                    }).bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                        resizeModal.off.call(self);\n                    }).bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                        resizeModal.off.call(self);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off() {\n                    var setModalPosition = function setModalPosition() {\n                        var box = this.resizer.offset();\n                        jQuery.extend(box, {\n                            width: this.resizer.width(),\n                            height: this.resizer.height()\n                        });\n                        if (!this.activeModalConfig.absolute) {\n                            box.left -= jQuery(document).scrollLeft();\n                            box.top -= jQuery(document).scrollTop();\n                        }\n                        this.activeModal.css(box);\n                        box = null;\n                    };\n\n                    if (this.resizer) {\n                        this.activeModal.removeClass(\"draged\");\n                        setModalPosition.call(this);\n\n                        this.resizer.remove();\n                        this.resizer = null;\n                        this.resizerBg.remove();\n                        this.resizerBg = null;\n                        //this.align();\n                    }\n\n                    jQuery(document.body).unbind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id).unbind(ENM[\"mouseup\"] + \".ax5modal-\" + cfg.id).unbind(\"mouseleave.ax5modal-\" + cfg.id);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            };\n\n            /// private end\n\n            /**\n             * Preferences of modal UI\n             * @method ax5modal.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @param {Boolean} [config.absolute=false]\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * open the modal\n             * @method ax5modal.open\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.open();\n             * ```\n             */\n            this.open = function (opts, callback, tryCount) {\n                if (typeof tryCount === \"undefined\") tryCount = 0;\n                if (!this.activeModal) {\n                    opts = self.modalConfig = jQuery.extend(true, {}, cfg, opts);\n                    open.call(this, opts, callback);\n                    this.watingModal = false;\n                } else if (tryCount < 3) {\n                    // 3번까지 재 시도\n                    this.watingModal = true;\n                    setTimeout(function () {\n                        this.open(opts, callback, tryCount + 1);\n                    }.bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * close the modal\n             * @method ax5modal.close\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.close();\n             * ```\n             */\n            this.close = function (opts) {\n                if (this.activeModal) {\n                    opts = self.modalConfig;\n                    this.activeModal.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax-modal\");\n                    jQuery(window).unbind(\"resize.ax-modal\");\n\n                    setTimeout(function () {\n                        if (this.activeModal) {\n\n                            // 프레임 제거\n                            if (opts.iframe) {\n                                var $iframe = this.$[\"iframe\"]; // iframe jQuery Object\n                                if ($iframe) {\n                                    var iframeObject = $iframe.get(0),\n                                        idoc = iframeObject.contentDocument ? iframeObject.contentDocument : iframeObject.contentWindow.document;\n\n                                    try {\n                                        $(idoc.body).children().each(function () {\n                                            $(this).remove();\n                                        });\n                                    } catch (e) {}\n                                    idoc.innerHTML = \"\";\n                                    $iframe.attr('src', 'about:blank').remove();\n\n                                    // force garbarge collection for IE only\n                                    window.CollectGarbage && window.CollectGarbage();\n                                }\n                            }\n\n                            this.activeModal.remove();\n                            this.activeModal = null;\n                        }\n                        // 모달 오픈 대기중이면 닫기 상태 전달 안함.\n                        if (!this.watingModal) {\n                            onStateChanged.call(this, opts, {\n                                self: this,\n                                state: \"close\"\n                            });\n                        }\n                    }.bind(this), cfg.animateTime);\n                }\n\n                this.minimized = false; // hoksi\n\n                return this;\n            };\n\n            /**\n             * @method ax5modal.minimize\n             * @returns {ax5modal}\n             */\n            this.minimize = function () {\n\n                return function (minimizePosition) {\n\n                    if (this.minimized !== true) {\n\n                        var opts = self.modalConfig;\n                        if (typeof minimizePosition === \"undefined\") minimizePosition = cfg.minimizePosition;\n\n                        this.minimized = true;\n                        this.$.body.hide();\n                        self.modalConfig.originalHeight = opts.height;\n                        self.modalConfig.height = 0;\n                        alignProcessor[minimizePosition].call(this);\n\n                        onStateChanged.call(this, opts, {\n                            self: this,\n                            state: \"minimize\"\n                        });\n                    }\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5modal.maximize\n             * @returns {ax5modal}\n             */\n            this.maximize = function () {\n                var opts = self.modalConfig;\n                if (this.minimized) {\n                    this.minimized = false;\n                    this.$.body.show();\n                    self.modalConfig.height = self.modalConfig.originalHeight;\n                    self.modalConfig.originalHeight = undefined;\n\n                    this.align({ left: \"center\", top: \"middle\" });\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"restore\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * setCSS\n             * @method ax5modal.css\n             * @param {Object} css -\n             * @returns {ax5modal}\n             */\n            this.css = function (css) {\n                if (this.activeModal && !self.fullScreen) {\n                    this.activeModal.css(css);\n                    if (css.width) {\n                        self.modalConfig.width = this.activeModal.width();\n                    }\n                    if (css.height) {\n                        self.modalConfig.height = this.activeModal.height();\n                        if (this.$[\"iframe\"]) {\n                            this.$[\"iframe-wrap\"].css({ height: self.modalConfig.height });\n                            this.$[\"iframe\"].css({ height: self.modalConfig.height });\n                        }\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5modal.setModalConfig\n             * @param _config\n             * @returns {ax5.ui.ax5modal}\n             */\n            this.setModalConfig = function (_config) {\n                self.modalConfig = jQuery.extend({}, self.modalConfig, _config);\n                this.align();\n                return this;\n            };\n\n            /**\n             * @method ax5modal.align\n             * @param position\n             * @param e\n             * @returns {ax5modal}\n             */\n            this.align = function () {\n\n                return function (position, e) {\n                    if (!this.activeModal) return this;\n\n                    var opts = self.modalConfig,\n                        box = {\n                        width: opts.width,\n                        height: opts.height\n                    };\n\n                    var fullScreen = opts.isFullScreen = function (_fullScreen) {\n                        if (typeof _fullScreen === \"undefined\") {\n                            return false;\n                        } else if (U.isFunction(_fullScreen)) {\n                            return _fullScreen();\n                        }\n                    }(opts.fullScreen);\n\n                    if (fullScreen) {\n                        if (opts.header) this.$.header.show();\n                        box.width = jQuery(window).width();\n                        box.height = opts.height;\n                        box.left = 0;\n                        box.top = 0;\n                    } else {\n                        if (opts.header) this.$.header.show();\n                        if (position) {\n                            jQuery.extend(true, opts.position, position);\n                        }\n\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n\n                        //- position 정렬\n                        if (opts.position.left == \"left\") {\n                            box.left = opts.position.margin || 0;\n                        } else if (opts.position.left == \"right\") {\n                            // window.innerWidth;\n                            box.left = jQuery(window).width() - box.width - (opts.position.margin || 0);\n                        } else if (opts.position.left == \"center\") {\n                            box.left = jQuery(window).width() / 2 - box.width / 2;\n                        } else {\n                            box.left = opts.position.left || 0;\n                        }\n\n                        if (opts.position.top == \"top\") {\n                            box.top = opts.position.margin || 0;\n                        } else if (opts.position.top == \"bottom\") {\n                            box.top = jQuery(window).height() - box.height - (opts.position.margin || 0);\n                        } else if (opts.position.top == \"middle\") {\n                            box.top = jQuery(window).height() / 2 - box.height / 2;\n                        } else {\n                            box.top = opts.position.top || 0;\n                        }\n                        if (box.left < 0) box.left = 0;\n                        if (box.top < 0) box.top = 0;\n                    }\n\n                    this.activeModal.css(box);\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({ height: box.height - opts.headerHeight });\n                        this.$[\"iframe\"].css({ height: box.height - opts.headerHeight });\n                    }\n                    return this;\n                };\n            }();\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.modal_instance = UI.modal_instance || [];\n                UI.modal_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5modal;\n    }());\n\n    MODAL = ax5.ui.modal;\n})();\n\n// ax5.ui.modal.tmpl\n(function () {\n    var MODAL = ax5.ui.modal;\n\n    var content = function content() {\n        return \" \\n        <div id=\\\"{{modalId}}\\\" data-modal-els=\\\"root\\\" class=\\\"ax5modal {{theme}} {{fullscreen}}\\\" style=\\\"{{styles}}\\\">\\n            {{#header}}\\n            <div class=\\\"ax-modal-header\\\" data-modal-els=\\\"header\\\">\\n                {{{title}}}\\n                {{#btns}}\\n                    <div class=\\\"ax-modal-header-addon\\\">\\n                    {{#@each}}\\n                    <button tabindex=\\\"-1\\\" data-modal-header-btn=\\\"{{@key}}\\\" class=\\\"{{@value.theme}}\\\">{{{@value.label}}}</button>\\n                    {{/@each}}\\n                    </div>\\n                {{/btns}}\\n            </div>\\n            {{/header}}\\n            <div class=\\\"ax-modal-body\\\" data-modal-els=\\\"body\\\">\\n            {{#iframe}}\\n                <div data-modal-els=\\\"iframe-wrap\\\" style=\\\"-webkit-overflow-scrolling: touch; overflow: auto;position: relative;\\\">\\n                    <table data-modal-els=\\\"iframe-loading\\\" style=\\\"width:100%;height:100%;\\\"><tr><td style=\\\"text-align: center;vertical-align: middle\\\">{{{iframeLoadingMsg}}}</td></tr></table>\\n                    <iframe name=\\\"{{modalId}}-frame\\\" src=\\\"\\\" width=\\\"100%\\\" height=\\\"100%\\\" frameborder=\\\"0\\\" data-modal-els=\\\"iframe\\\" style=\\\"position: absolute;left:0;top:0;\\\"></iframe>\\n                </div>\\n                <form name=\\\"{{modalId}}-form\\\" data-modal-els=\\\"iframe-form\\\">\\n                <input type=\\\"hidden\\\" name=\\\"modalId\\\" value=\\\"{{modalId}}\\\" />\\n                {{#param}}\\n                {{#@each}}\\n                <input type=\\\"hidden\\\" name=\\\"{{@key}}\\\" value=\\\"{{@value}}\\\" />\\n                {{/@each}}\\n                {{/param}}\\n                </form>\\n            {{/iframe}}\\n            {{^iframe}}\\n                <div data-modal-els=\\\"body-frame\\\" style=\\\"position: absolute;left:0;top:0;width:100%;height:100%;\\\"></div>\\n            {{/iframe}}\\n            </div>\\n            <div data-ax5modal-resizer=\\\"top\\\"></div>\\n            <div data-ax5modal-resizer=\\\"right\\\"></div>\\n            <div data-ax5modal-resizer=\\\"bottom\\\"></div>\\n            <div data-ax5modal-resizer=\\\"left\\\"></div>\\n            <div data-ax5modal-resizer=\\\"top-left\\\"></div>\\n            <div data-ax5modal-resizer=\\\"top-right\\\"></div>\\n            <div data-ax5modal-resizer=\\\"bottom-left\\\"></div>\\n            <div data-ax5modal-resizer=\\\"bottom-right\\\"></div>\\n        </div>\\n        \";\n    };\n\n    MODAL.tmpl = {\n        \"content\": content,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MODAL.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","// ax5.ui.modal\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MODAL;\n\n    UI.addClass({\n        className: \"modal\",\n        version: \"${VERSION}\"\n    }, (function () {\n        /**\n         * @class ax5modal\n         * @alias ax5.ui.modal\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var modal = new ax5.ui.modal({\n         *     iframeLoadingMsg: '<i class=\"fa fa-spinner fa-5x fa-spin\" aria-hidden=\"true\"></i>',\n         *     header: {\n         *         title: \"MODAL TITLE\",\n         *         btns: {\n         *             minimize: {\n         *                 label: '<i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.minimize();\n         *                 }\n         *             },\n         *             maximize: {\n         *                 label: '<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.maximize();\n         *                 }\n         *             },\n         *             close: {\n         *                 label: '<i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.close();\n         *                 }\n         *             }\n         *         }\n         *     }\n         * });\n         *\n         * modal.open({\n         *     width: 800,\n         *     height: 600,\n         *     fullScreen: function(){\n         *         return ($(window).width() < 600);\n         *     },\n         *     iframe: {\n         *         method: \"get\",\n         *         url: \"http://chequer-app:2017/html/login.html\",\n         *         param: \"callback=modalCallback\"\n         *     }\n         * });\n         * ```\n         */\n        var ax5modal = function () {\n            let self = this,\n                cfg,\n                ENM = {\n                    \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n                    \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n                    \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n                },\n                getMousePosition = function (e) {\n                    let mouseObj = e;\n                    if ('changedTouches' in e) {\n                        mouseObj = e.changedTouches[0];\n                    }\n                    return {\n                        clientX: mouseObj.clientX,\n                        clientY: mouseObj.clientY\n                    }\n                };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-modal-' + this.instanceId,\n                position: {\n                    left: \"center\",\n                    top: \"middle\",\n                    margin: 10\n                },\n                minimizePosition: \"bottom-right\",\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                height: 400,\n                closeToEsc: true,\n                disableDrag: false,\n                animateTime: 250\n            };\n            this.activeModal = null;\n            this.watingModal = false;\n            this.$ = {}; // UI inside of the jQuery object store\n\n            cfg = this.config; // extended config copy cfg\n\n            let onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n                    return true;\n                },\n                getContent = function (modalId, opts) {\n                    let data = {\n                        modalId: modalId,\n                        theme: opts.theme,\n                        header: opts.header,\n                        fullScreen: (opts.fullScreen ? \"fullscreen\" : \"\"),\n                        styles: \"\",\n                        iframe: opts.iframe,\n                        iframeLoadingMsg: opts.iframeLoadingMsg\n                    };\n\n                    if (opts.zIndex) {\n                        data.styles += \"z-index:\" + opts.zIndex + \";\";\n                    }\n                    if (opts.absolute) {\n                        data.styles += \"position:absolute;\";\n                    }\n\n                    if (data.iframe && typeof data.iframe.param === \"string\") {\n                        data.iframe.param = ax5.util.param(data.iframe.param);\n                    }\n\n                    return MODAL.tmpl.get.call(this, \"content\", data, {});\n                },\n                open = function (opts, callback) {\n                    let that;\n                    jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                    this.activeModal = jQuery('#' + opts.id);\n                    this.activeModalConfig = opts;\n                    // 파트수집\n                    this.$ = {\n                        \"root\": this.activeModal,\n                        \"header\": this.activeModal.find('[data-modal-els=\"header\"]'),\n                        \"body\": this.activeModal.find('[data-modal-els=\"body\"]')\n                    };\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"] = this.activeModal.find('[data-modal-els=\"iframe-wrap\"]');\n                        this.$[\"iframe\"] = this.activeModal.find('[data-modal-els=\"iframe\"]');\n                        this.$[\"iframe-form\"] = this.activeModal.find('[data-modal-els=\"iframe-form\"]');\n                        this.$[\"iframe-loading\"] = this.activeModal.find('[data-modal-els=\"iframe-loading\"]');\n                    }\n                    else {\n                        this.$[\"body-frame\"] = this.activeModal.find('[data-modal-els=\"body-frame\"]');\n                    }\n\n                    //- position 정렬\n                    this.align();\n\n                    that = {\n                        self: this,\n                        id: opts.id,\n                        theme: opts.theme,\n                        width: opts.width,\n                        height: opts.height,\n                        state: \"open\",\n                        $: this.$\n                    };\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({height: opts.height});\n                        this.$[\"iframe\"].css({height: opts.height});\n\n                        // iframe content load\n                        this.$[\"iframe-form\"].attr({\"method\": opts.iframe.method});\n                        this.$[\"iframe-form\"].attr({\"target\": opts.id + \"-frame\"});\n                        this.$[\"iframe-form\"].attr({\"action\": opts.iframe.url});\n                        this.$[\"iframe\"].on(\"load\", (function () {\n                            that.state = \"load\";\n                            if (opts.iframeLoadingMsg) {\n                                this.$[\"iframe-loading\"].hide();\n                            }\n                            onStateChanged.call(this, opts, that);\n                        }).bind(this));\n                        if (!opts.iframeLoadingMsg) {\n                            this.$[\"iframe\"].show();\n                        }\n                        this.$[\"iframe-form\"].submit();\n                    }\n\n                    if (callback) callback.call(that, that);\n\n                    if (!this.watingModal) {\n                        onStateChanged.call(this, opts, that);\n                    }\n\n                    // bind key event\n                    if (opts.closeToEsc) {\n                        jQuery(window).bind(\"keydown.ax-modal\", (function (e) {\n                            onkeyup.call(this, e || window.event);\n                        }).bind(this));\n                    }\n                    jQuery(window).bind(\"resize.ax-modal\", (function (e) {\n                        this.align(null, e || window.event);\n                    }).bind(this));\n\n                    this.activeModal\n                        .on(cfg.clickEventName, \"[data-modal-header-btn]\", (function (e) {\n                            btnOnClick.call(this, e || window.event, opts);\n                        }).bind(this));\n\n                    this.$.header\n                        .off(ENM[\"mousedown\"])\n                        .off(\"dragstart\")\n                        .on(ENM[\"mousedown\"], function (e) {\n                            if (opts.isFullScreen) return false;\n\n                            /// 이벤트 필터링 추가 : 버튼엘리먼트로 부터 발생된 이벤트이면 moveModal 시작하지 않도록 필터링\n                            let isButton = U.findParentNode(e.target, function (_target) {\n                                if (_target.getAttribute(\"data-modal-header-btn\")) {\n                                    return true;\n                                }\n                            });\n\n                            if (!isButton && opts.disableDrag != true) {\n                                self.mousePosition = getMousePosition(e);\n                                moveModal.on.call(self);\n                            }\n                        })\n                        .on(\"dragstart\", function (e) {\n                            U.stopEvent(e.originalEvent);\n                            return false;\n                        });\n\n                    this.activeModal\n                        .off(ENM[\"mousedown\"])\n                        .off(\"dragstart\")\n                        .on(ENM[\"mousedown\"], \"[data-ax5modal-resizer]\", function (e) {\n                            if (opts.isFullScreen) return false;\n                            self.mousePosition = getMousePosition(e);\n                            resizeModal.on.call(self, this.getAttribute(\"data-ax5modal-resizer\"));\n                        })\n                        .on(\"dragstart\", function (e) {\n                            U.stopEvent(e.originalEvent);\n                            return false;\n                        });\n                },\n                btnOnClick = function (e, opts, callback, target, k) {\n                    let that;\n                    if (e.srcElement) e.target = e.srcElement;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-modal-header-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        k = target.getAttribute(\"data-modal-header-btn\");\n\n                        that = {\n                            self: this,\n                            key: k, value: opts.header.btns[k],\n                            dialogId: opts.id,\n                            btnTarget: target\n                        };\n\n                        if (opts.header.btns[k].onClick) {\n                            opts.header.btns[k].onClick.call(that, k);\n                        }\n                    }\n\n                    that = null;\n                    opts = null;\n                    callback = null;\n                    target = null;\n                    k = null;\n                },\n                onkeyup = function (e) {\n                    if (e.keyCode == ax5.info.eventKeys.ESC) {\n                        this.close();\n                    }\n                },\n                alignProcessor = {\n                    \"top-left\": function () {\n                        this.align({left: \"left\", top: \"top\"});\n                    },\n                    \"top-right\": function () {\n                        this.align({left: \"right\", top: \"top\"});\n                    },\n                    \"bottom-left\": function () {\n                        this.align({left: \"left\", top: \"bottom\"});\n                    },\n                    \"bottom-right\": function () {\n                        this.align({left: \"right\", top: \"bottom\"});\n                    },\n                    \"center-middle\": function () {\n                        this.align({left: \"center\", top: \"middle\"});\n                    }\n                },\n                moveModal = {\n                    \"on\": function () {\n                        let modalZIndex = this.activeModal.css(\"z-index\"),\n                            modalOffset = this.activeModal.position(),\n                            modalBox = {\n                                width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                            },\n                            windowBox = {\n                                width: jQuery(window).width(),\n                                height: jQuery(window).height(),\n                                scrollLeft: (this.activeModalConfig.absolute) ? 0 : jQuery(document).scrollLeft(),\n                                scrollTop: (this.activeModalConfig.absolute) ? 0 : jQuery(document).scrollTop(),\n                            },\n                            getResizerPosition = function (e) {\n                                self.__dx = e.clientX - self.mousePosition.clientX;\n                                self.__dy = e.clientY - self.mousePosition.clientY;\n\n                                if (minX > modalOffset.left + self.__dx) {\n                                    self.__dx = -modalOffset.left;\n                                }\n                                else if (maxX < modalOffset.left + self.__dx) {\n                                    self.__dx = (maxX) - modalOffset.left;\n                                }\n\n                                if (minY > modalOffset.top + self.__dy) {\n                                    self.__dy = -modalOffset.top;\n                                }\n                                else if (maxY < modalOffset.top + self.__dy) {\n                                    self.__dy = (maxY) - modalOffset.top;\n                                }\n\n                                return {\n                                    left: modalOffset.left + self.__dx + windowBox.scrollLeft,\n                                    top: modalOffset.top + self.__dy + windowBox.scrollTop\n                                };\n                            };\n\n                        let minX = 0, maxX = windowBox.width - modalBox.width,\n                            minY = 0, maxY = windowBox.height - modalBox.height;\n\n                        self.__dx = 0; // 변화량 X\n                        self.__dy = 0; // 변화량 Y\n\n                        if (!self.resizer) {\n                            // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                            self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                            self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                            self.resizerBg.css({zIndex: modalZIndex});\n                            self.resizer.css({\n                                left: modalOffset.left + windowBox.scrollLeft,\n                                top: modalOffset.top + windowBox.scrollTop,\n                                width: modalBox.width,\n                                height: modalBox.height,\n                                zIndex: modalZIndex + 1\n                            });\n                            jQuery(document.body)\n                                .append(self.resizerBg)\n                                .append(self.resizer);\n                            self.activeModal.addClass(\"draged\");\n                        }\n\n                        jQuery(document.body)\n                            .bind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id, function (e) {\n                                self.resizer.css(getResizerPosition(e));\n                            })\n                            .bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                                moveModal.off.call(self);\n                            })\n                            .bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                                moveModal.off.call(self);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n                    },\n                    \"off\": function () {\n                        let setModalPosition = function () {\n                            let box = this.resizer.offset();\n                            if (!this.activeModalConfig.absolute) {\n                                box.left -= jQuery(document).scrollLeft();\n                                box.top -= jQuery(document).scrollTop();\n                            }\n                            this.activeModal.css(box);\n                            box = null;\n                        };\n\n                        if (this.resizer) {\n                            this.activeModal.removeClass(\"draged\");\n                            setModalPosition.call(this);\n\n                            this.resizer.remove();\n                            this.resizer = null;\n                            this.resizerBg.remove();\n                            this.resizerBg = null;\n                            //this.align();\n                        }\n\n                        jQuery(document.body)\n                            .unbind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id)\n                            .unbind(ENM[\"mouseup\"] + \".ax5modal-\" + cfg.id)\n                            .unbind(\"mouseleave.ax5modal-\" + cfg.id);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n\n                    }\n                },\n                resizeModal = {\n                    \"on\": function (resizerType) {\n                        let modalZIndex = this.activeModal.css(\"z-index\"),\n                            modalOffset = this.activeModal.position(),\n                            modalBox = {\n                                width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                            },\n                            windowBox = {\n                                width: jQuery(window).width(),\n                                height: jQuery(window).height(),\n                                scrollLeft: (this.activeModalConfig.absolute) ? 0 : jQuery(document).scrollLeft(),\n                                scrollTop: (this.activeModalConfig.absolute) ? 0 : jQuery(document).scrollTop(),\n                            },\n                            resizerProcessor = {\n                                \"top\": function (e) {\n\n\n                                    if (e.shiftKey) {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width,\n                                            height: modalBox.height - (self.__dy * 2)\n                                        };\n                                    }\n                                    else if (e.altKey) {\n                                        return {\n                                            left: modalOffset.left + self.__dy,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width - (self.__dy * 2),\n                                            height: modalBox.height - (self.__dy * 2)\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width,\n                                            height: modalBox.height - self.__dy,\n                                        };\n                                    }\n                                },\n                                \"bottom\": function (e) {\n                                    if (e.shiftKey) {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top - self.__dy,\n                                            width: modalBox.width,\n                                            height: modalBox.height + (self.__dy * 2)\n                                        };\n                                    }\n                                    else if (e.altKey) {\n                                        return {\n                                            left: modalOffset.left - self.__dy,\n                                            top: modalOffset.top - self.__dy,\n                                            width: modalBox.width + (self.__dy * 2),\n                                            height: modalBox.height + (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top,\n                                            width: modalBox.width,\n                                            height: modalBox.height + self.__dy,\n                                        };\n                                    }\n                                },\n                                \"left\": function (e) {\n                                    if (e.shiftKey) {\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top,\n                                            width: modalBox.width - (self.__dx * 2),\n                                            height: modalBox.height\n                                        };\n                                    }\n                                    else if (e.altKey) {\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top + self.__dx,\n                                            width: modalBox.width - (self.__dx * 2),\n                                            height: modalBox.height - (self.__dx * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top,\n                                            width: modalBox.width - self.__dx,\n                                            height: modalBox.height,\n                                        };\n                                    }\n                                },\n                                \"right\": function (e) {\n                                    if (e.shiftKey) {\n                                        return {\n                                            left: modalOffset.left - self.__dx,\n                                            top: modalOffset.top,\n                                            width: modalBox.width + (self.__dx * 2),\n                                            height: modalBox.height,\n                                        };\n                                    }\n                                    else if (e.altKey) {\n                                        return {\n                                            left: modalOffset.left - self.__dx,\n                                            top: modalOffset.top - self.__dx,\n                                            width: modalBox.width + (self.__dx * 2),\n                                            height: modalBox.height + (self.__dx * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top,\n                                            width: modalBox.width + self.__dx,\n                                            height: modalBox.height,\n                                        };\n                                    }\n                                },\n                                \"top-left\": function (e) {\n                                    if (e.shiftKey || e.altKey) {\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width - (self.__dx * 2),\n                                            height: modalBox.height - (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width - self.__dx,\n                                            height: modalBox.height - self.__dy,\n                                        };\n                                    }\n                                },\n                                \"top-right\": function (e) {\n                                    if (e.shiftKey || e.altKey) {\n                                        return {\n                                            left: modalOffset.left - self.__dx,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width + (self.__dx * 2),\n                                            height: modalBox.height - (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width + self.__dx,\n                                            height: modalBox.height - self.__dy,\n                                        };\n                                    }\n                                },\n                                \"bottom-left\": function (e) {\n                                    if (e.shiftKey || e.altKey) {\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top - self.__dy,\n                                            width: modalBox.width - (self.__dx * 2),\n                                            height: modalBox.height + (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top,\n                                            width: modalBox.width - self.__dx,\n                                            height: modalBox.height + self.__dy,\n                                        };\n                                    }\n                                },\n                                \"bottom-right\": function (e) {\n                                    if (e.shiftKey || e.altKey) {\n                                        return {\n                                            left: modalOffset.left - self.__dx,\n                                            top: modalOffset.top - self.__dy,\n                                            width: modalBox.width + (self.__dx * 2),\n                                            height: modalBox.height + (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top,\n                                            width: modalBox.width + self.__dx,\n                                            height: modalBox.height + self.__dy,\n                                        };\n                                    }\n                                },\n                            },\n                            getResizerPosition = function (e) {\n                                self.__dx = e.clientX - self.mousePosition.clientX;\n                                if (minX > modalOffset.left + self.__dx) {\n                                    self.__dx = -modalOffset.left;\n                                }\n                                else if (maxX > modalBox.width - self.__dx) {\n                                    self.__dx = modalBox.width - (maxX);\n                                }\n\n                                self.__dy = e.clientY - self.mousePosition.clientY;\n                                if (minY > modalOffset.top + self.__dy) {\n                                    self.__dy = -modalOffset.top;\n                                }\n                                else if (maxY > modalBox.height - self.__dy) {\n                                    self.__dy = modalBox.height - (maxY);\n                                }\n\n                                return resizerProcessor[resizerType](e);\n                            };\n\n                        if (!this.activeModalConfig.absolute) {\n                            modalOffset.left += windowBox.scrollLeft;\n                            modalOffset.top += windowBox.scrollTop;\n                        }\n\n                        let minX = 0, maxX = 100,\n                            minY = 0, maxY = 100;\n\n                        let cursorType = {\n                            \"top\": \"row-resize\",\n                            \"bottom\": \"row-resize\",\n                            \"left\": \"col-resize\",\n                            \"right\": \"col-resize\",\n                            \"top-left\": \"nwse-resize\",\n                            \"top-right\": \"nesw-resize\",\n                            \"bottom-left\": \"nesw-resize\",\n                            \"bottom-right\": \"nwse-resize\",\n                        };\n\n                        self.__dx = 0; // 변화량 X\n                        self.__dy = 0; // 변화량 Y\n\n                        if (!self.resizer) {\n                            // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                            self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                            self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                            self.resizerBg.css({\n                                zIndex: modalZIndex,\n                                cursor: cursorType[resizerType]\n                            });\n                            self.resizer.css({\n                                left: modalOffset.left,\n                                top: modalOffset.top,\n                                width: modalBox.width,\n                                height: modalBox.height,\n                                zIndex: modalZIndex + 1,\n                                cursor: cursorType[resizerType]\n                            });\n                            jQuery(document.body)\n                                .append(self.resizerBg)\n                                .append(self.resizer);\n                            self.activeModal.addClass(\"draged\");\n                        }\n\n                        jQuery(document.body)\n                            .bind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id, function (e) {\n                                self.resizer.css(getResizerPosition(e));\n                            })\n                            .bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                                resizeModal.off.call(self);\n                            })\n                            .bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                                resizeModal.off.call(self);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n                    },\n                    \"off\": function () {\n                        let setModalPosition = function () {\n                            let box = this.resizer.offset();\n                            jQuery.extend(box, {\n                                width: this.resizer.width(),\n                                height: this.resizer.height(),\n                            });\n                            if (!this.activeModalConfig.absolute) {\n                                box.left -= jQuery(document).scrollLeft();\n                                box.top -= jQuery(document).scrollTop();\n                            }\n                            this.activeModal.css(box);\n                            box = null;\n                        };\n\n                        if (this.resizer) {\n                            this.activeModal.removeClass(\"draged\");\n                            setModalPosition.call(this);\n\n                            this.resizer.remove();\n                            this.resizer = null;\n                            this.resizerBg.remove();\n                            this.resizerBg = null;\n                            //this.align();\n                        }\n\n                        jQuery(document.body)\n                            .unbind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id)\n                            .unbind(ENM[\"mouseup\"] + \".ax5modal-\" + cfg.id)\n                            .unbind(\"mouseleave.ax5modal-\" + cfg.id);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n\n                    }\n                };\n\n            /// private end\n\n            /**\n             * Preferences of modal UI\n             * @method ax5modal.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @param {Boolean} [config.absolute=false]\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * open the modal\n             * @method ax5modal.open\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.open();\n             * ```\n             */\n            this.open = function (opts, callback, tryCount) {\n                if (typeof tryCount === \"undefined\") tryCount = 0;\n                if (!this.activeModal) {\n                    opts = self.modalConfig = jQuery.extend(true, {}, cfg, opts);\n                    open.call(this, opts, callback);\n                    this.watingModal = false;\n                }\n                else if (tryCount < 3) {\n                    // 3번까지 재 시도\n                    this.watingModal = true;\n                    setTimeout((function () {\n                        this.open(opts, callback, tryCount + 1);\n                    }).bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * close the modal\n             * @method ax5modal.close\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.close();\n             * ```\n             */\n            this.close = function (opts) {\n                if (this.activeModal) {\n                    opts = self.modalConfig;\n                    this.activeModal.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax-modal\");\n                    jQuery(window).unbind(\"resize.ax-modal\");\n\n                    setTimeout((function () {\n                        if (this.activeModal) {\n\n                            // 프레임 제거\n                            if (opts.iframe) {\n                                var $iframe = this.$[\"iframe\"]; // iframe jQuery Object\n                                if ($iframe) {\n                                    var iframeObject = $iframe.get(0),\n                                        idoc = (iframeObject.contentDocument) ? iframeObject.contentDocument : iframeObject.contentWindow.document;\n\n                                    try {\n                                        $(idoc.body).children().each(function () {\n                                            $(this).remove();\n                                        });\n                                    } catch (e) {\n\n                                    }\n                                    idoc.innerHTML = \"\";\n                                    $iframe\n                                        .attr('src', 'about:blank')\n                                        .remove();\n\n                                    // force garbarge collection for IE only\n                                    window.CollectGarbage && window.CollectGarbage();\n                                }\n                            }\n\n                            this.activeModal.remove();\n                            this.activeModal = null;\n                        }\n                        // 모달 오픈 대기중이면 닫기 상태 전달 안함.\n                        if (!this.watingModal) {\n                            onStateChanged.call(this, opts, {\n                                self: this,\n                                state: \"close\"\n                            });\n                        }\n                    }).bind(this), cfg.animateTime);\n                }\n\n                this.minimized = false; // hoksi\n\n                return this;\n            };\n\n            /**\n             * @method ax5modal.minimize\n             * @returns {ax5modal}\n             */\n            this.minimize = (function () {\n\n                return function (minimizePosition) {\n\n                    if (this.minimized !== true) {\n\n                        var opts = self.modalConfig;\n                        if (typeof minimizePosition === \"undefined\") minimizePosition = cfg.minimizePosition;\n\n                        this.minimized = true;\n                        this.$.body.hide();\n                        self.modalConfig.originalHeight = opts.height;\n                        self.modalConfig.height = 0;\n                        alignProcessor[minimizePosition].call(this);\n\n                        onStateChanged.call(this, opts, {\n                            self: this,\n                            state: \"minimize\"\n                        });\n                    }\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5modal.maximize\n             * @returns {ax5modal}\n             */\n            this.maximize = function () {\n                var opts = self.modalConfig;\n                if (this.minimized) {\n                    this.minimized = false;\n                    this.$.body.show();\n                    self.modalConfig.height = self.modalConfig.originalHeight;\n                    self.modalConfig.originalHeight = undefined;\n\n                    this.align({left: \"center\", top: \"middle\"});\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"restore\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * setCSS\n             * @method ax5modal.css\n             * @param {Object} css -\n             * @returns {ax5modal}\n             */\n            this.css = function (css) {\n                if (this.activeModal && !self.fullScreen) {\n                    this.activeModal.css(css);\n                    if (css.width) {\n                        self.modalConfig.width = this.activeModal.width();\n                    }\n                    if (css.height) {\n                        self.modalConfig.height = this.activeModal.height();\n                        if (this.$[\"iframe\"]) {\n                            this.$[\"iframe-wrap\"].css({height: self.modalConfig.height});\n                            this.$[\"iframe\"].css({height: self.modalConfig.height});\n                        }\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5modal.setModalConfig\n             * @param _config\n             * @returns {ax5.ui.ax5modal}\n             */\n            this.setModalConfig = function (_config) {\n                self.modalConfig = jQuery.extend({}, self.modalConfig, _config);\n                this.align();\n                return this;\n            };\n\n            /**\n             * @method ax5modal.align\n             * @param position\n             * @param e\n             * @returns {ax5modal}\n             */\n            this.align = (function () {\n\n                return function (position, e) {\n                    if (!this.activeModal) return this;\n\n                    var opts = self.modalConfig,\n                        box = {\n                            width: opts.width,\n                            height: opts.height\n                        };\n\n                    var fullScreen = opts.isFullScreen = (function (_fullScreen) {\n                        if (typeof _fullScreen === \"undefined\") {\n                            return false;\n                        } else if (U.isFunction(_fullScreen)) {\n                            return _fullScreen();\n                        }\n                    })(opts.fullScreen);\n\n                    if (fullScreen) {\n                        if (opts.header) this.$.header.show();\n                        box.width = jQuery(window).width();\n                        box.height = opts.height;\n                        box.left = 0;\n                        box.top = 0;\n                    }\n                    else {\n                        if (opts.header) this.$.header.show();\n                        if (position) {\n                            jQuery.extend(true, opts.position, position);\n                        }\n\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n\n                        //- position 정렬\n                        if (opts.position.left == \"left\") {\n                            box.left = (opts.position.margin || 0);\n                        }\n                        else if (opts.position.left == \"right\") {\n                            // window.innerWidth;\n                            box.left = jQuery(window).width() - box.width - (opts.position.margin || 0);\n                        }\n                        else if (opts.position.left == \"center\") {\n                            box.left = jQuery(window).width() / 2 - box.width / 2;\n                        }\n                        else {\n                            box.left = opts.position.left || 0;\n                        }\n\n                        if (opts.position.top == \"top\") {\n                            box.top = (opts.position.margin || 0);\n                        }\n                        else if (opts.position.top == \"bottom\") {\n                            box.top = jQuery(window).height() - box.height - (opts.position.margin || 0);\n                        }\n                        else if (opts.position.top == \"middle\") {\n                            box.top = jQuery(window).height() / 2 - box.height / 2;\n                        }\n                        else {\n                            box.top = opts.position.top || 0;\n                        }\n                        if (box.left < 0) box.left = 0;\n                        if (box.top < 0) box.top = 0;\n                    }\n\n                    this.activeModal.css(box);\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({height: box.height - opts.headerHeight});\n                        this.$[\"iframe\"].css({height: box.height - opts.headerHeight});\n                    }\n                    return this;\n                };\n            })();\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.modal_instance = UI.modal_instance || [];\n                UI.modal_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n\n            }).apply(this, arguments);\n        };\n        return ax5modal;\n    })());\n\n    MODAL = ax5.ui.modal;\n})();\n","// ax5.ui.modal.tmpl\n(function () {\n    var MODAL = ax5.ui.modal;\n\n    var content = function () {\n        return ` \n        <div id=\"{{modalId}}\" data-modal-els=\"root\" class=\"ax5modal {{theme}} {{fullscreen}}\" style=\"{{styles}}\">\n            {{#header}}\n            <div class=\"ax-modal-header\" data-modal-els=\"header\">\n                {{{title}}}\n                {{#btns}}\n                    <div class=\"ax-modal-header-addon\">\n                    {{#@each}}\n                    <button tabindex=\"-1\" data-modal-header-btn=\"{{@key}}\" class=\"{{@value.theme}}\">{{{@value.label}}}</button>\n                    {{/@each}}\n                    </div>\n                {{/btns}}\n            </div>\n            {{/header}}\n            <div class=\"ax-modal-body\" data-modal-els=\"body\">\n            {{#iframe}}\n                <div data-modal-els=\"iframe-wrap\" style=\"-webkit-overflow-scrolling: touch; overflow: auto;position: relative;\">\n                    <table data-modal-els=\"iframe-loading\" style=\"width:100%;height:100%;\"><tr><td style=\"text-align: center;vertical-align: middle\">{{{iframeLoadingMsg}}}</td></tr></table>\n                    <iframe name=\"{{modalId}}-frame\" src=\"\" width=\"100%\" height=\"100%\" frameborder=\"0\" data-modal-els=\"iframe\" style=\"position: absolute;left:0;top:0;\"></iframe>\n                </div>\n                <form name=\"{{modalId}}-form\" data-modal-els=\"iframe-form\">\n                <input type=\"hidden\" name=\"modalId\" value=\"{{modalId}}\" />\n                {{#param}}\n                {{#@each}}\n                <input type=\"hidden\" name=\"{{@key}}\" value=\"{{@value}}\" />\n                {{/@each}}\n                {{/param}}\n                </form>\n            {{/iframe}}\n            {{^iframe}}\n                <div data-modal-els=\"body-frame\" style=\"position: absolute;left:0;top:0;width:100%;height:100%;\"></div>\n            {{/iframe}}\n            </div>\n            <div data-ax5modal-resizer=\"top\"></div>\n            <div data-ax5modal-resizer=\"right\"></div>\n            <div data-ax5modal-resizer=\"bottom\"></div>\n            <div data-ax5modal-resizer=\"left\"></div>\n            <div data-ax5modal-resizer=\"top-left\"></div>\n            <div data-ax5modal-resizer=\"top-right\"></div>\n            <div data-ax5modal-resizer=\"bottom-left\"></div>\n            <div data-ax5modal-resizer=\"bottom-right\"></div>\n        </div>\n        `;\n    };\n\n    MODAL.tmpl = {\n        \"content\": content,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MODAL.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();"]}